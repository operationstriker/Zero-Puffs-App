import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native';
import React, { useState } from "react"
import PlusImage from "./Images/Plus.png"
import { Tabs } from "expo-router"

export default function App() {

  const [Count, setCount] = useState(0)

  // if (Count == 0) {
  //   print("true")
  //   print("R")

  // if count 
  // }

  return (
    <View style={styles.container}>
      <Text style={{fontSize: "35", position: "relative", bottom: "22%"}}>Zero Puffs</Text>
      


      <View style={styles.CircleView}>
       <Text style={{color: "red", fontSize: 50, fontWeight: "semibold"}}>{Count}</Text>
       <Text>out of 20</Text>
       {/* <Text style={{color: "#FFBD36"}}>1.23 mg</Text>
       <Text style={{color: "#67ff49ff"}}>Nicotine</Text> */}
      </View>

      {/* <View style={styles.ViewUsage}>
        <Text style={{textAlign: "center"}}>Usage today</Text>

        <Text>NO PUFFS RECORDED</Text>
      </View> */}


        <TouchableOpacity style={styles.PuffButton2}>
        <Text style={{textAlign: "center", color: "red", fontSize: "28", fontWeight: "semibold"}}>UPDATE  PUFFS</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.PuffButton} onPress={(() => setCount(Count + 1))}>
        <Text style={{textAlign: "center", color: "white", fontSize: "25", fontWeight: "semibold"}}>PUFF</Text>
      </TouchableOpacity>
      <StatusBar style="auto" />

      {/* images, plus, graph, settings */}
{/* 
      <Tabs>
        <Tabs.Screen></Tabs.Screen>
      </Tabs> */}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#ffffffff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  PuffButton: {
    position: "relative",
    top: "25%",
    height: 55,
    width: "80%",
    borderRadius: 27,
    backgroundColor: "#FF0000",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
  },
  PuffButton2: {
        position: "relative",
    top: "24%",
    height: 55,
    width: "80%",
    borderWidth: 2,
    borderColor: "red",
    borderRadius: 23,
    backgroundColor: "white",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
  },
  CircleView: {
    position: "relative",
    bottom: "15%",
     width: 200, // Set desired width
    height: 200, // Set desired height (must be equal to width)
    borderRadius: 100, // Half of the width/height
    borderWidth: 15,
    borderColor: "lightgray",
    backgroundColor: 'transparent', // Example background color
    justifyContent: "center",
    alignItems: "center",
  },
  ViewUsage: {

  }
});


// start expo
//npx expo start



import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View, Button, TouchableOpacity, Image } from 'react-native';
import React, { useState } from "react"
// import { Tabs } from "expo-router"
// import ProgressCircle from "react-native-progress-circle"
import { AnimatedCircularProgress } from 'react-native-circular-progress';

export default function App() {

  const [Count, setCount] = useState(0)


    const [value, setValue] = useState(1) // create a variable
    const maxValue = 20;
  
      const fill = (value / maxValue) * 100;

  if (Count == 7) {
    console.log("True")
    console.log("R")

  }

  return (
    <View style={styles.container}>
      {/* <Image source={require('./Images/Font.png')} style={{height: 50, width: 200, position: "relative", top: "-5%"}}/>
       */}
       <Text style={{fontSize: 40, fontFamily: "Arial", bottom: "-1%", color: "gray"}}>ZeroPuffs</Text>

      <View style={styles.CircleView}>
       <Text style={{color: "red", fontSize: 50, fontWeight: "semibold"}}>{Count}</Text>

       <Text>out of 20</Text>
      </View>

            <AnimatedCircularProgress
        size={220}
        width={15}
        fill={fill}
        tintColor="#ff0000ff"
        backgroundColor="#3d5875"
          rotation={-6}>
        {
          (fill) => (
            <Text> {value} </Text>
            // <Text>
            //   {value} / {maxValue}  {/* display actual value */}
            // </Text>
          )
        }
      </AnimatedCircularProgress>
{/* 
      <ProgressCircle percent={30}
            radius={50}
            borderWidth={8}
            color="#3399FF"
            shadowColor="#999"
            bgColor="#c06969ff">
<Text style={{ fontSize: 18 }}>{'30%'}</Text>
      </ProgressCircle> */}

      <View style={{position: "relative", top: "7%", left: "5%"}}>
        <View style={styles.vstack}>
        <Text style={{marginBottom: 20}}>20 </Text>
        <Text style={{marginBottom: 20}}>15 </Text>
        <Text style={{marginBottom: 20}}>10 </Text>
        <Text style={{marginBottom: 20}}>5</Text>
        </View>

      <View style={styles.hstack}>
        <Text style={{marginRight: 35}}>0</Text>
        <Text style={{marginRight: 35}}>5</Text>
        <Text style={{marginRight: 35}}>10</Text>
        <Text style={{marginRight: 35}}>15</Text>
        <Text style={{marginRight: 35}}>20</Text>
        <Text style={{marginRight: 35}}>25</Text>
        </View>

      </View>

        <TouchableOpacity style={styles.PuffButton2}>
        <Text style={{textAlign: "center", color: "red", fontSize: "28", fontWeight: "semibold"}}>UPDATE  PUFFS</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.PuffButton} onPress={(() => setCount(Count + 1))}>
        <Text style={{textAlign: "center", color: "white", fontSize: "28", fontWeight: "semibold"}}>PUFF</Text>
      </TouchableOpacity>
      <StatusBar style="auto" />

<View style={{position: "relative", top: "23%"}}>
<Image source={require('./Images/Plus.png')} style={{height: 50, width: 50, position: "relative", top: "-15%"}}/>
<Image source={require('./Images/bar.png')} style={{height: 50, width: 50, position: "relative", bottom: "45%", left: "35%"}}/>
<Image source={require('./Images/Profile.png')} style={{height: 50, width: 50, position: "relative", bottom: "85%", left: "-30%"}}/>
</View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#ffffffff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  PuffButton: {
    position: "relative",
    top: "16%",
    height: 55,
    width: "85%",
    borderRadius: 27,
    backgroundColor: "#FF0000",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
  },
  PuffButton2: {
        position: "relative",
    top: "15%",
    height: 55,
    width: "85%",
    borderWidth: 2,
    borderColor: "red",
    borderRadius: 27,
    backgroundColor: "white",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
    boxshadow: "0 0 0 5px rgba(255, 10, 10, 1);"
  },
  CircleView: {
    position: "relative",
    bottom: "-5%",
     width: 220, // Set desired width
    height: 220, // Set desired height (must be equal to width)
    borderRadius: 130, // Half of the width/height
    borderWidth: 15,
    borderColor: "lightgray",
    backgroundColor: 'transparent', // Example background color
    justifyContent: "center",
    alignItems: "center",
  },
  vstack: {
    flexDirection: "column"
  },
  hstack: {
    flexDirection: "row"
  }
});

//
import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View, Button, TouchableOpacity, Image } from 'react-native';
import React, { useState } from "react"
import { AnimatedCircularProgress } from 'react-native-circular-progress';
import { TextInput } from 'react-native';
// import { Tabs } from "expo-router"

export default function App() {

    const maxValue = 20;
  
      const fill = (value / maxValue) * 100;

  // pop up when there close to their max
// overwrite overwrites the amount of puffs you have
// add adds more puffs
  function pufffunc() {
    setValue(value + 1)
  }

  const [isVisible, setVisibility] = useState(false);

  const toggleVisibility = () => {
    setVisibility(!isVisible);
  }

  const CloseDiv = () => {
    setVisibility(false)
  }

  // const UpdateDiv = UpdateDivElement

  // function OpenDiv() {
  //    UpdateDiv.display = "block"
  // }

  return (
    <View style={styles.container}>
       <Text style={{fontSize: 40, fontFamily: "Arial", bottom: "4%", color: "gray"}}>ZeroPuffs</Text>

            <AnimatedCircularProgress
        size={220}
        width={15}
        fill={fill}
        tintColor="#ff0000ff"
        backgroundColor="#bababaff"
          rotation={-6}>
        {
          (fill) => (
            <Text style={{fontSize: 40, textAlign: "center"}}> {value}</Text>
          )
        }
      </AnimatedCircularProgress>
 
      {isVisible && (
<View style={styles.UpdateDivElement}> 
        <Text style={{fontWeight: "bold", textAlign: "center"}}>Update Puffs</Text>
        <TouchableOpacity onPress={CloseDiv}>
          <Text>Close</Text>
        </TouchableOpacity>
        <View style={{flexDirection: "row"}}>
        <Button title='Add'></Button>
        <Button title='Overwrite'></Button>
        </View>
        <Text>Enter Puff Amount</Text>
        <TextInput keyboardType='number-pad'></TextInput>
        <TouchableOpacity title="Update" style={{backgroundColor: "red", height: 20, width: 150, borderRadius: 8}}>
          <Text style={{textAlign: "center", color: "white"}}>Update</Text>
        </TouchableOpacity>
      </View>
      )}

      <View style={{position: "relative", top: "7%", left: "5%"}}>
        <View style={styles.vstack}>
        <Text style={{marginBottom: 20}}>20 </Text>
        <Text style={{marginBottom: 20}}>15 </Text>
        <Text style={{marginBottom: 20}}>10 </Text>
        <Text style={{marginBottom: 20}}>5</Text>
        </View>

      <View style={styles.hstack}>
        <Text style={{marginRight: 35}}>0</Text>
        <Text style={{marginRight: 35}}>5</Text>
        <Text style={{marginRight: 35}}>10</Text>
        <Text style={{marginRight: 35}}>15</Text>
        <Text style={{marginRight: 35}}>20</Text>
        <Text style={{marginRight: 35}}>25</Text>
        </View>
      </View>

        <TouchableOpacity style={styles.PuffButton2} onPress={toggleVisibility}>
        <Text style={{textAlign: "center", color: "red", fontSize: "28", fontWeight: "semibold"}}>UPDATE  PUFFS</Text>
      </TouchableOpacity>

      <TouchableOpacity style={styles.PuffButton} onPress={(() => setValue(value + 1))}>
        <Text style={{textAlign: "center", color: "white", fontSize: "28", fontWeight: "semibold"}} onPress={pufffunc}>PUFF</Text>
      </TouchableOpacity>
      <StatusBar style="auto" />

<View style={{position: "relative", top: "23%"}}>
<Image source={require('./Images/Plus.png')} style={{height: 50, width: 50, position: "relative", top: "-15%"}}/>
<Image source={require('./Images/bar.png')} style={{height: 50, width: 50, position: "relative", bottom: "45%", left: "35%"}}/>
<Image source={require('./Images/Profile.png')} style={{height: 50, width: 50, position: "relative", bottom: "85%", left: "-30%"}}/>
</View>

{/* <Tabs>
  <Tabs.Screen name='index'/>
</Tabs> */}
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#ffffffff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  PuffButton: {
    position: "relative",
    top: "16%",
    height: 55,
    width: "85%",
    borderRadius: 27,
    backgroundColor: "#FF0000",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
  },
  PuffButton2: {
        position: "relative",
    top: "15%",
    height: 55,
    width: "85%",
    borderWidth: 2,
    borderColor: "red",
    borderRadius: 27,
    backgroundColor: "white",
    cursor: "pointer",
    justifyContent: "center",
    alignItems: "center",
    boxshadow: "0 0 0 5px rgba(255, 10, 10, 1);"
  },
  vstack: {
    flexDirection: "column"
  },
  hstack: {
    flexDirection: "row"
  },
  UpdateDivElement: {
    backgroundColor: "gray",
    borderRadius: 10,
    width: 200
  }
});
